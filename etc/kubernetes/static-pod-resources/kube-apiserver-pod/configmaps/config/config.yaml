{
  "admission": {
    "pluginConfig": {
      "PodSecurity": {
        "configuration": {
          "apiVersion": "pod-security.admission.config.k8s.io/v1beta1",
          "defaults": {
            "audit": "restricted",
            "audit-version": "latest",
            "enforce": "privileged",
            "enforce-version": "latest",
            "warn": "restricted",
            "warn-version": "latest"
          },
          "exemptions": {
            "usernames": [
              "system:serviceaccount:openshift-infra:build-controller"
            ]
          },
          "kind": "PodSecurityConfiguration"
        }
      },
      "network.openshift.io/ExternalIPRanger": {
        "configuration": {
          "allowIngressIP": false,
          "apiVersion": "network.openshift.io/v1",
          "externalIPNetworkCIDRs": null,
          "kind": "ExternalIPRangerAdmissionConfig"
        },
        "location": ""
      },
      "network.openshift.io/RestrictedEndpointsAdmission": {
        "configuration": {
          "apiVersion": "network.openshift.io/v1",
          "kind": "RestrictedEndpointsAdmissionConfig",
          "restrictedCIDRs": [
            "10.128.0.0/14",
            "172.30.0.0/16"
          ]
        }
      }
    }
  },
  "apiServerArguments": {
    "allow-privileged": [
      "true"
    ],
    "anonymous-auth": [
      "true"
    ],
    "api-audiences": [
      "https://kubernetes.default.svc"
    ],
    "audit-log-format": [
      "json"
    ],
    "audit-log-maxbackup": [
      "10"
    ],
    "audit-log-maxsize": [
      "100"
    ],
    "audit-log-path": [
      "/var/log/kube-apiserver/audit.log"
    ],
    "audit-policy-file": [
      "/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-audit-policies/policy.yaml"
    ],
    "authentication-token-webhook-config-file": [
      "/etc/kubernetes/static-pod-resources/secrets/webhook-authenticator/kubeConfig"
    ],
    "authentication-token-webhook-version": [
      "v1"
    ],
    "authorization-mode": [
      "Scope",
      "SystemMasters",
      "RBAC",
      "Node"
    ],
    "client-ca-file": [
      "/etc/kubernetes/static-pod-certs/configmaps/client-ca/ca-bundle.crt"
    ],
    "enable-admission-plugins": [
      "CertificateApproval",
      "CertificateSigning",
      "CertificateSubjectRestriction",
      "DefaultIngressClass",
      "DefaultStorageClass",
      "DefaultTolerationSeconds",
      "LimitRanger",
      "MutatingAdmissionWebhook",
      "NamespaceLifecycle",
      "NodeRestriction",
      "OwnerReferencesPermissionEnforcement",
      "PersistentVolumeClaimResize",
      "PersistentVolumeLabel",
      "PodNodeSelector",
      "PodTolerationRestriction",
      "Priority",
      "ResourceQuota",
      "RuntimeClass",
      "ServiceAccount",
      "StorageObjectInUseProtection",
      "TaintNodesByCondition",
      "ValidatingAdmissionWebhook",
      "authorization.openshift.io/RestrictSubjectBindings",
      "authorization.openshift.io/ValidateRoleBindingRestriction",
      "config.openshift.io/DenyDeleteClusterConfiguration",
      "config.openshift.io/ValidateAPIServer",
      "config.openshift.io/ValidateAuthentication",
      "config.openshift.io/ValidateConsole",
      "config.openshift.io/ValidateFeatureGate",
      "config.openshift.io/ValidateImage",
      "config.openshift.io/ValidateOAuth",
      "config.openshift.io/ValidateProject",
      "config.openshift.io/ValidateScheduler",
      "image.openshift.io/ImagePolicy",
      "network.openshift.io/ExternalIPRanger",
      "network.openshift.io/RestrictedEndpointsAdmission",
      "quota.openshift.io/ClusterResourceQuota",
      "quota.openshift.io/ValidateClusterResourceQuota",
      "route.openshift.io/IngressAdmission",
      "scheduling.openshift.io/OriginPodNodeEnvironment",
      "security.openshift.io/DefaultSecurityContextConstraints",
      "security.openshift.io/SCCExecRestrictions",
      "security.openshift.io/SecurityContextConstraint",
      "security.openshift.io/ValidateSecurityContextConstraints"
    ],
    "enable-aggregator-routing": [
      "true"
    ],
    "enable-logs-handler": [
      "false"
    ],
    "endpoint-reconciler-type": [
      "lease"
    ],
    "etcd-cafile": [
      "/etc/kubernetes/static-pod-resources/configmaps/etcd-serving-ca/ca-bundle.crt"
    ],
    "etcd-certfile": [
      "/etc/kubernetes/static-pod-resources/secrets/etcd-client/tls.crt"
    ],
    "etcd-keyfile": [
      "/etc/kubernetes/static-pod-resources/secrets/etcd-client/tls.key"
    ],
    "etcd-prefix": [
      "kubernetes.io"
    ],
    "etcd-servers": [
      "https://10.19.115.9:2379",
      "https://localhost:2379"
    ],
    "event-ttl": [
      "3h"
    ],
    "feature-gates": [
      "APIPriorityAndFairness=true",
      "RotateKubeletServerCertificate=true",
      "DownwardAPIHugePages=true",
      "CSIMigrationAzureFile=false",
      "CSIMigrationvSphere=false"
    ],
    "goaway-chance": [
      "0"
    ],
    "http2-max-streams-per-connection": [
      "2000"
    ],
    "kubelet-certificate-authority": [
      "/etc/kubernetes/static-pod-resources/configmaps/kubelet-serving-ca/ca-bundle.crt"
    ],
    "kubelet-client-certificate": [
      "/etc/kubernetes/static-pod-certs/secrets/kubelet-client/tls.crt"
    ],
    "kubelet-client-key": [
      "/etc/kubernetes/static-pod-certs/secrets/kubelet-client/tls.key"
    ],
    "kubelet-preferred-address-types": [
      "InternalIP"
    ],
    "kubelet-read-only-port": [
      "0"
    ],
    "kubernetes-service-node-port": [
      "0"
    ],
    "max-mutating-requests-inflight": [
      "1000"
    ],
    "max-requests-inflight": [
      "3000"
    ],
    "min-request-timeout": [
      "3600"
    ],
    "proxy-client-cert-file": [
      "/etc/kubernetes/static-pod-certs/secrets/aggregator-client/tls.crt"
    ],
    "proxy-client-key-file": [
      "/etc/kubernetes/static-pod-certs/secrets/aggregator-client/tls.key"
    ],
    "requestheader-allowed-names": [
      "kube-apiserver-proxy",
      "system:kube-apiserver-proxy",
      "system:openshift-aggregator"
    ],
    "requestheader-client-ca-file": [
      "/etc/kubernetes/static-pod-certs/configmaps/aggregator-client-ca/ca-bundle.crt"
    ],
    "requestheader-extra-headers-prefix": [
      "X-Remote-Extra-"
    ],
    "requestheader-group-headers": [
      "X-Remote-Group"
    ],
    "requestheader-username-headers": [
      "X-Remote-User"
    ],
    "service-account-issuer": [
      "https://kubernetes.default.svc"
    ],
    "service-account-jwks-uri": [
      "https://api-int.sno.choomba.one:6443/openid/v1/jwks"
    ],
    "service-account-lookup": [
      "true"
    ],
    "service-account-signing-key-file": [
      "/etc/kubernetes/static-pod-certs/secrets/bound-service-account-signing-key/service-account.key"
    ],
    "service-node-port-range": [
      "30000-32767"
    ],
    "shutdown-delay-duration": [
      "0s"
    ],
    "shutdown-send-retry-after": [
      "true"
    ],
    "storage-backend": [
      "etcd3"
    ],
    "storage-media-type": [
      "application/vnd.kubernetes.protobuf"
    ],
    "strict-transport-security-directives": [
      "max-age=31536000,includeSubDomains,preload"
    ],
    "tls-cert-file": [
      "/etc/kubernetes/static-pod-certs/secrets/service-network-serving-certkey/tls.crt"
    ],
    "tls-private-key-file": [
      "/etc/kubernetes/static-pod-certs/secrets/service-network-serving-certkey/tls.key"
    ]
  },
  "apiVersion": "kubecontrolplane.config.openshift.io/v1",
  "authConfig": {
    "oauthMetadataFile": "/etc/kubernetes/static-pod-resources/configmaps/oauth-metadata/oauthMetadata"
  },
  "consolePublicURL": "",
  "corsAllowedOrigins": [
    "//127\\.0\\.0\\.1(:|$)",
    "//localhost(:|$)"
  ],
  "kind": "KubeAPIServerConfig",
  "projectConfig": {
    "defaultNodeSelector": ""
  },
  "serviceAccountPublicKeyFiles": [
    "/etc/kubernetes/static-pod-resources/configmaps/sa-token-signing-certs",
    "/etc/kubernetes/static-pod-resources/configmaps/bound-sa-token-signing-certs"
  ],
  "servicesSubnet": "172.30.0.0/16",
  "servingInfo": {
    "bindAddress": "0.0.0.0:6443",
    "bindNetwork": "tcp4",
    "cipherSuites": [
      "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
      "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
      "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
      "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
    ],
    "minTLSVersion": "VersionTLS12",
    "namedCertificates": [
      {
        "certFile": "/etc/kubernetes/static-pod-certs/secrets/localhost-serving-cert-certkey/tls.crt",
        "keyFile": "/etc/kubernetes/static-pod-certs/secrets/localhost-serving-cert-certkey/tls.key"
      },
      {
        "certFile": "/etc/kubernetes/static-pod-certs/secrets/service-network-serving-certkey/tls.crt",
        "keyFile": "/etc/kubernetes/static-pod-certs/secrets/service-network-serving-certkey/tls.key"
      },
      {
        "certFile": "/etc/kubernetes/static-pod-certs/secrets/external-loadbalancer-serving-certkey/tls.crt",
        "keyFile": "/etc/kubernetes/static-pod-certs/secrets/external-loadbalancer-serving-certkey/tls.key"
      },
      {
        "certFile": "/etc/kubernetes/static-pod-certs/secrets/internal-loadbalancer-serving-certkey/tls.crt",
        "keyFile": "/etc/kubernetes/static-pod-certs/secrets/internal-loadbalancer-serving-certkey/tls.key"
      },
      {
        "certFile": "/etc/kubernetes/static-pod-resources/secrets/localhost-recovery-serving-certkey/tls.crt",
        "keyFile": "/etc/kubernetes/static-pod-resources/secrets/localhost-recovery-serving-certkey/tls.key"
      }
    ]
  }
}
