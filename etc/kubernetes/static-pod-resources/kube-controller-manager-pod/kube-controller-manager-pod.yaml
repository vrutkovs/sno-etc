{
  "kind": "Pod",
  "apiVersion": "v1",
  "metadata": {
    "name": "kube-controller-manager",
    "namespace": "openshift-kube-controller-manager",
    "creationTimestamp": null,
    "labels": {
      "app": "kube-controller-manager",
      "kube-controller-manager": "true",
      "revision": "7"
    },
    "annotations": {
      "kubectl.kubernetes.io/default-container": "kube-controller-manager",
      "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
    }
  },
  "spec": {
    "volumes": [
      {
        "name": "resource-dir",
        "hostPath": {
          "path": "/etc/kubernetes/static-pod-resources/kube-controller-manager-pod-7"
        }
      },
      {
        "name": "cert-dir",
        "hostPath": {
          "path": "/etc/kubernetes/static-pod-resources/kube-controller-manager-certs"
        }
      }
    ],
    "containers": [
      {
        "name": "kube-controller-manager",
        "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6191e17ae9a6d100e9e62ac3dae2dab4c36a1cddea0c6cc50f95dc466dc2cac3",
        "command": [
          "/bin/bash",
          "-euxo",
          "pipefail",
          "-c"
        ],
        "args": [
          "timeout 3m /bin/bash -exuo pipefail -c 'while [ -n \"$(ss -Htanop \\( sport = 10257 \\))\" ]; do sleep 1; done'\n\nif [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then\n  echo \"Copying system trust bundle\"\n  cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\nfi\n\nif [ -f /etc/kubernetes/static-pod-resources/configmaps/cloud-config/ca-bundle.pem ]; then\n  echo \"Setting custom CA bundle for cloud provider\"\n  export AWS_CA_BUNDLE=/etc/kubernetes/static-pod-resources/configmaps/cloud-config/ca-bundle.pem\nfi\n\nexec hyperkube kube-controller-manager --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml \\\n  --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --authentication-kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --authorization-kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --client-ca-file=/etc/kubernetes/static-pod-certs/configmaps/client-ca/ca-bundle.crt \\\n  --requestheader-client-ca-file=/etc/kubernetes/static-pod-certs/configmaps/aggregator-client-ca/ca-bundle.crt -v=2 --tls-cert-file=/etc/kubernetes/static-pod-resources/secrets/serving-cert/tls.crt --tls-private-key-file=/etc/kubernetes/static-pod-resources/secrets/serving-cert/tls.key --allocate-node-cidrs=false --cert-dir=/var/run/kubernetes --cluster-cidr=10.128.0.0/14 --cluster-name=sno-ntksg --cluster-signing-cert-file=/etc/kubernetes/static-pod-certs/secrets/csr-signer/tls.crt --cluster-signing-duration=720h --cluster-signing-key-file=/etc/kubernetes/static-pod-certs/secrets/csr-signer/tls.key --configure-cloud-routes=false --controllers=* --controllers=-bootstrapsigner --controllers=-tokencleaner --controllers=-ttl --enable-dynamic-provisioning=true --feature-gates=APIPriorityAndFairness=true --feature-gates=CSIMigrationAzureFile=false --feature-gates=CSIMigrationvSphere=false --feature-gates=DownwardAPIHugePages=true --feature-gates=RotateKubeletServerCertificate=true --flex-volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec --kube-api-burst=300 --kube-api-qps=150 --leader-elect-resource-lock=configmapsleases --leader-elect-retry-period=3s --leader-elect=true --pv-recycler-pod-template-filepath-hostpath=/etc/kubernetes/static-pod-resources/configmaps/recycler-config/recycler-pod.yaml --pv-recycler-pod-template-filepath-nfs=/etc/kubernetes/static-pod-resources/configmaps/recycler-config/recycler-pod.yaml --root-ca-file=/etc/kubernetes/static-pod-resources/configmaps/serviceaccount-ca/ca-bundle.crt --secure-port=10257 --service-account-private-key-file=/etc/kubernetes/static-pod-resources/secrets/service-account-private-key/service-account.key --service-cluster-ip-range=172.30.0.0/16 --use-service-account-credentials=true --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 --tls-min-version=VersionTLS12"
        ],
        "ports": [
          {
            "containerPort": 10257
          }
        ],
        "resources": {
          "requests": {
            "cpu": "60m",
            "memory": "200Mi"
          }
        },
        "volumeMounts": [
          {
            "name": "resource-dir",
            "mountPath": "/etc/kubernetes/static-pod-resources"
          },
          {
            "name": "cert-dir",
            "mountPath": "/etc/kubernetes/static-pod-certs"
          }
        ],
        "livenessProbe": {
          "httpGet": {
            "path": "healthz",
            "port": 10257,
            "scheme": "HTTPS"
          },
          "initialDelaySeconds": 45,
          "timeoutSeconds": 10
        },
        "readinessProbe": {
          "httpGet": {
            "path": "healthz",
            "port": 10257,
            "scheme": "HTTPS"
          },
          "initialDelaySeconds": 10,
          "timeoutSeconds": 10
        },
        "startupProbe": {
          "httpGet": {
            "path": "healthz",
            "port": 10257,
            "scheme": "HTTPS"
          },
          "timeoutSeconds": 3
        },
        "terminationMessagePolicy": "FallbackToLogsOnError",
        "imagePullPolicy": "IfNotPresent"
      },
      {
        "name": "cluster-policy-controller",
        "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:25db6f75580d4ecd0adb7ebe004c46b34f4cc58070a183be976589026bef9aed",
        "command": [
          "/bin/bash",
          "-euxo",
          "pipefail",
          "-c"
        ],
        "args": [
          "timeout 3m /bin/bash -exuo pipefail -c 'while [ -n \"$(ss -Htanop \\( sport = 10357 \\))\" ]; do sleep 1; done'\n\nexec cluster-policy-controller start --config=/etc/kubernetes/static-pod-resources/configmaps/cluster-policy-controller-config/config.yaml \\\n  --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --namespace=${POD_NAMESPACE} -v=2"
        ],
        "ports": [
          {
            "containerPort": 10357
          }
        ],
        "env": [
          {
            "name": "POD_NAME",
            "valueFrom": {
              "fieldRef": {
                "fieldPath": "metadata.name"
              }
            }
          },
          {
            "name": "POD_NAMESPACE",
            "valueFrom": {
              "fieldRef": {
                "fieldPath": "metadata.namespace"
              }
            }
          }
        ],
        "resources": {
          "requests": {
            "cpu": "10m",
            "memory": "200Mi"
          }
        },
        "volumeMounts": [
          {
            "name": "resource-dir",
            "mountPath": "/etc/kubernetes/static-pod-resources"
          },
          {
            "name": "cert-dir",
            "mountPath": "/etc/kubernetes/static-pod-certs"
          }
        ],
        "livenessProbe": {
          "httpGet": {
            "path": "healthz",
            "port": 10357,
            "scheme": "HTTPS"
          },
          "initialDelaySeconds": 45,
          "timeoutSeconds": 10
        },
        "readinessProbe": {
          "httpGet": {
            "path": "healthz",
            "port": 10357,
            "scheme": "HTTPS"
          },
          "initialDelaySeconds": 10,
          "timeoutSeconds": 10
        },
        "startupProbe": {
          "httpGet": {
            "path": "healthz",
            "port": 10357,
            "scheme": "HTTPS"
          },
          "timeoutSeconds": 3
        },
        "terminationMessagePolicy": "FallbackToLogsOnError",
        "imagePullPolicy": "IfNotPresent"
      },
      {
        "name": "kube-controller-manager-cert-syncer",
        "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b1921d90841dca0ded77fef37ff9ea223e955a1e4a66ce9f0b6a462810c88b5c",
        "command": [
          "cluster-kube-controller-manager-operator",
          "cert-syncer"
        ],
        "args": [
          "--kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-controller-cert-syncer-kubeconfig/kubeconfig",
          "--namespace=$(POD_NAMESPACE)",
          "--destination-dir=/etc/kubernetes/static-pod-certs"
        ],
        "env": [
          {
            "name": "POD_NAME",
            "valueFrom": {
              "fieldRef": {
                "fieldPath": "metadata.name"
              }
            }
          },
          {
            "name": "POD_NAMESPACE",
            "valueFrom": {
              "fieldRef": {
                "fieldPath": "metadata.namespace"
              }
            }
          }
        ],
        "resources": {
          "requests": {
            "cpu": "5m",
            "memory": "50Mi"
          }
        },
        "volumeMounts": [
          {
            "name": "resource-dir",
            "mountPath": "/etc/kubernetes/static-pod-resources"
          },
          {
            "name": "cert-dir",
            "mountPath": "/etc/kubernetes/static-pod-certs"
          }
        ],
        "terminationMessagePolicy": "FallbackToLogsOnError",
        "imagePullPolicy": "IfNotPresent"
      },
      {
        "name": "kube-controller-manager-recovery-controller",
        "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b1921d90841dca0ded77fef37ff9ea223e955a1e4a66ce9f0b6a462810c88b5c",
        "command": [
          "/bin/bash",
          "-euxo",
          "pipefail",
          "-c"
        ],
        "args": [
          "timeout 3m /bin/bash -exuo pipefail -c 'while [ -n \"$(ss -Htanop \\( sport = 9443 \\))\" ]; do sleep 1; done'\n\nexec cluster-kube-controller-manager-operator cert-recovery-controller --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-controller-cert-syncer-kubeconfig/kubeconfig --namespace=${POD_NAMESPACE} --listen=0.0.0.0:9443 -v=2"
        ],
        "env": [
          {
            "name": "POD_NAMESPACE",
            "valueFrom": {
              "fieldRef": {
                "fieldPath": "metadata.namespace"
              }
            }
          }
        ],
        "resources": {
          "requests": {
            "cpu": "5m",
            "memory": "50Mi"
          }
        },
        "volumeMounts": [
          {
            "name": "resource-dir",
            "mountPath": "/etc/kubernetes/static-pod-resources"
          },
          {
            "name": "cert-dir",
            "mountPath": "/etc/kubernetes/static-pod-certs"
          }
        ],
        "terminationMessagePolicy": "FallbackToLogsOnError",
        "imagePullPolicy": "IfNotPresent"
      }
    ],
    "hostNetwork": true,
    "tolerations": [
      {
        "operator": "Exists"
      }
    ],
    "priorityClassName": "system-node-critical"
  },
  "status": {}
}
